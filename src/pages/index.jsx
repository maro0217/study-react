import Head from 'next/head'
import {useCallback, useEffect, useState} from 'react'
import { Footer } from 'src/components/Footer'
import { Header } from 'src/components/Header'
import { Main } from 'src/components/Main'
import styles from 'src/styles/Home.module.css'

export default function Home() {

  //配列の分割代入（記述の簡略化）（）内は初期値　
  const [count, setCount] = useState(1)
  const [text, setText] = useState("")
  const [isShow, steIsShow] = useState(true)


//第二引数に何も入れなかったら再度生成されないので、fooは１のまま更新されない
  const handleClick = useCallback(() => {
    if (count < 10) {
      setCount(count => count + 1);
      setCount(count => count + 1);
    }

  }, [count])

  const showChange = useCallback(() => {
    steIsShow(isShow => !isShow
    )

  }, [])

  
  
  //Homeコンポーネントがマウントされるときの処理（レンダリング）
  useEffect(() => {
    console.log(`マウント時： ${count}`);
    document.body.style.backgroundColor = "lightblue"

  //   //アンマウント時の処理（Clean up function）
    return () => {
      console.log(`アンマウント時： ${count}`);

    document.body.style.backgroundColor = ""

    }
  }, [count]);

  const textInput = useCallback((e) => {
    setText(e.target.value);

  })
  

  return (
    <div className={styles.container}>
      <Head>
        <title>Index</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header/>
      {/* return文内でif文は使えない→三項演算子 */}
      {isShow ? <h1>{count}</h1> : null}
      <button href='/about' onClick={handleClick}>
        ボタン
      </button>
      <button onClick={showChange}>
        {isShow ? "非表示" : "表示"}
      </button>
      <input 
        type="text"
        value={text}
        onChange={textInput}
      />

      <Main page="index"/>

      <Footer/>

    </div>
  )
}
