import Head from 'next/head'
import { Header } from 'src/components/Header'
import { Comment } from 'src/components/Comment';
import { SWRConfig } from 'swr';
import { comment } from 'postcss';
import { API_URL } from 'src/utils/const';

export const getStaticPaths = async() => {
  const comments = await fetch(`${API_URL}/comments`);
  const commentsData = await comments.json();
  const paths = commentsData.map((comment) => ({
    params: {id: comment.id.toString()}
  }))

  return {
    paths,
    fallback: "blocking"
  }
};

//SSRと似たような挙動
//SG化されていないページはSSRのようにデータが取れるまで何も表示されない

export const getStaticProps = async (ctx) => {
  const { id } = ctx.params;
  const COMMENT_API_URL = `${API_URL}/comments/${id}`;
  const comment = await fetch(COMMENT_API_URL);
  console.log(comment);
  if(!comment.ok) {
    return {
      notFound: true,
      revalidate: 1
    };
  }
  const commentData = await comment.json();
  return {
    props: {
      fallback: {
        [COMMENT_API_URL]: commentData,
      },
    },
    revalidate: 1,
  }
};


const CommentId = (props) => {
  const { fallback } = props;
//SG化されるまでユーザーに何かしら表示する
  if (router.isFallback) {
    return <div>Loading...</div>
  }

    return (
      <div>
        <Head>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <SWRConfig value={{ fallback }}>
          <Header/>
    
          <Comment/>
          </SWRConfig>

      </div>
    )
  }

  export default CommentId